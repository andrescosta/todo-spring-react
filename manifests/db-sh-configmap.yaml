apiVersion: v1
data:
  01-init-svc.sh: "#!/bin/bash\nset -e\nexport PGPASSWORD=$POSTGRES_PASSWORD\npsql
    -v ON_ERROR_STOP=1 --username \"$POSTGRES_USER\" --dbname \"$POSTGRES_DB\" <<-EOSQL\n
    \ CREATE USER $APP_DB_USER WITH PASSWORD '$APP_DB_PASS';\n  CREATE DATABASE $APP_DB_NAME;\n
    \ GRANT ALL PRIVILEGES ON DATABASE $APP_DB_NAME TO $APP_DB_USER;\n  \\connect
    $APP_DB_NAME $POSTGRES_USER\n  \n  GRANT ALL ON SCHEMA public TO $APP_DB_USER;\n
    \ \n  \\connect $APP_DB_NAME $APP_DB_USER\n  \n  BEGIN;\n    /*\n    Drops\n    */\n
    \   DROP TABLE IF EXISTS MUSER CASCADE;\n    DROP TABLE IF EXISTS LABEL_ACTIVITY
    CASCADE;\n    DROP TABLE IF EXISTS LABEL CASCADE;\n    DROP TABLE IF EXISTS MEDIA
    CASCADE;\n    DROP TABLE IF EXISTS ACTIVITY CASCADE;\n    DROP FUNCTION IF EXISTS
    trigger_set_timestamp;\n    CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n\n\n
    \   /* \n    Functions\n    */\n    CREATE OR REPLACE FUNCTION trigger_set_timestamp()
    RETURNS TRIGGER AS \\$\\$ BEGIN NEW.updated_at = NOW();\n    RETURN NEW;\n    END
    \\$\\$ language 'plpgsql';\n\n    /*  \n    MUSER \n    */\n    CREATE TABLE IF
    NOT EXISTS MUSER(\n        id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\n
    \       public_id uuid UNIQUE NOT NULL DEFAULT uuid_generate_v4(),\n        created_at
    timestamptz NOT NULL DEFAULT NOW(),\n        updated_at timestamptz NOT NULL DEFAULT
    NOW(),\n        full_name text,\n        email text\n    );\n    CREATE OR REPLACE
    TRIGGER set_timestamp_MUSER BEFORE\n    UPDATE ON MUSER FOR EACH ROW EXECUTE PROCEDURE
    trigger_set_timestamp();\n\n    /* \n    ACTIVITY\n    */\n    CREATE TABLE IF
    NOT EXISTS ACTIVITY(\n        id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\n
    \       public_id uuid UNIQUE NOT NULL DEFAULT uuid_generate_v4(),\n        created_at
    timestamptz NOT NULL DEFAULT NOW(),\n        updated_at timestamptz NOT NULL DEFAULT
    NOW(),\n        name text,\n        description text,\n        TYPE text NOT NULL,\n\t\ttitle
    text,\n\t\tsummary text,\n        state text NOT NULL,\n        STATUS text NOT
    NULL,\n        tags text [],\n        extra_data JSONB,\n        muser_id bigint
    NOT NULL,\n        CONSTRAINT fk_muser FOREIGN KEY(muser_id) REFERENCES muser(id)
    ON DELETE CASCADE\n    );\n\n    CREATE OR REPLACE TRIGGER set_timestamp_ACTIVITY
    BEFORE\n    UPDATE ON ACTIVITY FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();\n\n\n
    \   /* \n    LABEL \n    */\n    CREATE TABLE IF NOT EXISTS LABEL(\n        id
    bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\n        public_id uuid UNIQUE
    NOT NULL DEFAULT uuid_generate_v4(),\n        created_at timestamptz NOT NULL
    DEFAULT NOW(),\n        updated_at timestamptz NOT NULL DEFAULT NOW(),\n        name
    text,\n        description text,\n        muser_id bigint NOT NULL,\n        CONSTRAINT
    fk_muser FOREIGN KEY(muser_id) REFERENCES muser(id) ON DELETE CASCADE\n    );\n\n
    \   CREATE OR REPLACE TRIGGER set_timestamp_LABEL BEFORE\n    UPDATE ON LABEL
    FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();\n\n    /*\n    MEDIA\n
    \   */\n    CREATE TABLE IF NOT EXISTS MEDIA(\n        id bigint PRIMARY KEY GENERATED
    BY DEFAULT AS IDENTITY,\n        public_id uuid UNIQUE NOT NULL DEFAULT uuid_generate_v4(),\n
    \       created_at timestamptz NOT NULL DEFAULT NOW(),\n        updated_at timestamptz
    NOT NULL DEFAULT NOW(),\n        name text,\n        description text,\n        TYPE
    text NOT NULL,\n        URI text,\n        extra_data JSON,\n        activity_id
    bigint,\n        CONSTRAINT fk_activity FOREIGN KEY(activity_id) REFERENCES activity(id)
    ON DELETE CASCADE\n    );\n    CREATE OR REPLACE TRIGGER set_timestamp_MEDIA BEFORE\n
    \   UPDATE ON MEDIA FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();\n\n
    \   /* \n    LABEL_ACTIVITY\n    */\n    CREATE TABLE LABEL_ACTIVITY(\n        id
    bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\n        label_id bigint,\n
    \       activity_id bigint,\n        created_at timestamptz NOT NULL DEFAULT NOW(),\n
    \       updated_at timestamptz NOT NULL DEFAULT NOW(),\n        CONSTRAINT fk_label
    FOREIGN KEY(label_id) REFERENCES label(id) ON DELETE CASCADE,\n        CONSTRAINT
    fk_activity FOREIGN KEY(activity_id) REFERENCES activity(id) ON DELETE CASCADE\n
    \   );\n    CREATE OR REPLACE TRIGGER set_timestamp_LABEL_ACTIVITY BEFORE\n    UPDATE
    ON LABEL_ACTIVITY FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();\n\n
    \   /*\n    Alters\n    */\n    ALTER TABLE ACTIVITY\n    ADD COLUMN label_activity_id
    bigint REFERENCES LABEL_ACTIVITY(id) ON DELETE\n    SET NULL;\n\n    /*\n    Test
    data\n    */\n    DO \\$\\$\n    DECLARE v_muser_id bigint;\n    DECLARE v_activity_id
    bigint;\n    DECLARE v_label_id bigint;\n    DECLARE v_label_activity_id bigint;\n
    \   BEGIN\n    /*\n    User 1\n    */\n    INSERT INTO MUSER (full_name, email,
    public_id)\n    VALUES ('User_test_1', 'User@test1.com', '672d2e23-b824-41ca-97b0-6efe2d589842')\n
    \   RETURNING id INTO v_muser_id; \n\n    INSERT INTO ACTIVITY (\n            name,\n
    \           description,\n            TYPE,\n            state,\n            STATUS,\n
    \           tags,\n            extra_data,\n            muser_id\n        )\n
    \   VALUES(\n            'Activity1',\n            'My activity 1',\n            'DOC',\n
    \           'active',\n            'completed',\n            '{ \"tag1\",\n            \"tag2\"
    }',\n            '{ \"attr1\" :\"Attr1_v\",\n            \"attr2\" :\"Attr2_v\"
    }',\n            v_muser_id\n        )\n    RETURNING id INTO v_activity_id; \n\n
    \   INSERT INTO MEDIA (\n            name,\n            description,\n            TYPE,\n
    \           URI,\n            extra_data,\n            activity_id\n        )\n
    \   VALUES (\n            'PICTURE_URL',\n            'URL1',\n            'IMAGE',\n
    \           'http://media.com/p.jpg',\n            '{\"width\":100}',\n            v_activity_id\n
    \       );\n\n    INSERT INTO MEDIA (\n            name,\n            description,\n
    \           TYPE,\n            URI,\n            extra_data,\n            activity_id\n
    \       )\n    VALUES (\n            'PICTURE_URL2',\n            'URL2',\n            'IMAGE',\n
    \           'http://via.com/k.jpg',\n            '{\"height\":100}',\n            v_activity_id\n
    \       ); \n\n    INSERT INTO LABEL (name, description, public_id, muser_id)\n
    \   VALUES ('Label1', 'label 1', '53398f2e-8c80-4515-8c92-7587b75ee5d6', v_muser_id)\n
    \   RETURNING id INTO v_label_id;\n\n    INSERT INTO LABEL_ACTIVITY (label_id,
    activity_id)\n    VALUES (v_label_id, v_activity_id)\n    RETURNING id INTO v_label_activity_id;\n\n
    \   UPDATE ACTIVITY\n    SET label_activity_id = v_label_activity_id\n    WHERE
    id = v_activity_id;\n\nEND \\$\\$;\n\nCOMMIT;\n\nEOSQL\n"
  02-init-keycloak.sh: "#!/bin/bash\nset -e\nexport PGPASSWORD=$POSTGRES_PASSWORD\npsql
    -v ON_ERROR_STOP=1 --username \"$POSTGRES_USER\" --dbname \"$POSTGRES_DB\" <<-EOSQL\n\tCREATE
    USER $KC_DB_USERNAME WITH PASSWORD '$KC_DB_PASSWORD';\n\tCREATE DATABASE $KC_DB_URL_DATABASE;\n\tGRANT
    ALL PRIVILEGES ON DATABASE $KC_DB_URL_DATABASE TO $KC_DB_USERNAME;\n    \\connect
    $KC_DB_URL_DATABASE $POSTGRES_USER\n    GRANT ALL ON SCHEMA public TO $KC_DB_USERNAME;\nEOSQL\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2023-10-11T15:33:53Z"
  name: db-sh
  namespace: default
  resourceVersion: "18229"
  uid: ad7cae42-0128-4a59-aaf1-3da4e409dd5f
