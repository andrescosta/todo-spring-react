apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-db
  name: postgres-db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/app: "true"
        io.kompose.service: postgres-db
    spec:
      containers:
        - env:
            - name: APP_DB_NAME
              value: todo
            - name: APP_DB_PASS
              value: mysecretpassword
            - name: APP_DB_USER
              value: todo_user
            - name: KC_DB_PASSWORD
              value: keycloak123
            - name: KC_DB_URL_DATABASE
              value: keycloak
            - name: KC_DB_USERNAME
              value: keycloak
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              value: mysecretpassword
            - name: POSTGRES_USER
              value: postgres
          image: postgres:15
          livenessProbe:
            exec:
              command:
                - pg_isready -U postgres
            failureThreshold: 2
            periodSeconds: 60
            timeoutSeconds: 10
          name: postgres-db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: db-sh

      restartPolicy: Always
      volumes:
        - name: db-sh
          configMap:
              defaultMode: 420
              name: db-sh

status: {}
